name: test
on: [ push, pull_request ]

jobs:
  test:
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, windows-2022, macos-15 ]
        dc: [ dmd-2.107.1, ldc-1.32.2 ]
        arch: [ x86_64 ]
        include:
        # also test an older DMD verrsion
        - os: ubuntu-20.04
          dc: dmd-2.096.0
          arch: x86_64
        # also test 32-bit (but only on Windows)
        - os: windows-2022
          dc: ldc-1.32.2
          arch: x86_mscoff # not x86 to avoid OPTLINK deadlock bugs
        exclude:
        # Do not try to use DMD on Windows
        # https://issues.dlang.org/show_bug.cgi?id=22044
        - os: windows-2022
          dc: dmd-2.107.1

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install D compiler
        uses: dlang-community/setup-dlang@934047eba531212a2c77e7c1b5999d32c2becb81
        with:
          compiler: ${{ matrix.dc }}

      # https://github.com/dlang-community/setup-dlang/issues/85
      - name: Set up PATH on Windows/x86 for LDC libcurl.dll
        if: ${{ matrix.os == 'windows-2022' && matrix.dc == 'ldc-1.32.2' && matrix.arch == 'x86_mscoff' }}
        run: |
          echo "C:\hostedtoolcache\windows\ldc2\1.32.2\x64\ldc2-1.32.2-windows-multilib\lib32" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - run: dub test --debug=ae_unittest --arch=${{ matrix.arch }}

      - run: dub test --debug=ae_unittest --arch=${{ matrix.arch }} :sys-net-test

      - if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: dub test --debug=ae_unittest --arch=${{ matrix.arch }} :sqlite

      - if: ${{ matrix.os == 'ubuntu-20.04' && matrix.dc == 'dmd-2.107.1' }} # old Dub versions can't fetch packages
        run: dub test --debug=ae_unittest --arch=${{ matrix.arch }} :libpng

      - if: ${{ matrix.dc == 'dmd-2.107.1' }}
        run: dub test --debug=ae_unittest --arch=${{ matrix.arch }} :windows

  compilation-test:
    timeout-minutes: 5
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        dc: [ dmd-2.107.1 ]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install D compiler
        uses: dlang-community/setup-dlang@934047eba531212a2c77e7c1b5999d32c2becb81
        with:
          compiler: ${{ matrix.dc }}

      - run: ./makejson.sh

      - shell: bash
        run: ./testflags.sh
